#BGPsec-IO Configuration file. Auto generated by bgpsecio V0.2.1.4
#
# To generate the latest valid file use 'bgpsecio -C <cfg-file>'
#
# This example file provides the settings for the draft-bgsec-algs.
# The ASNs as well as the IPv4 and IPv6 prefixes used in this example are taken 
# from RFC5398 and RFC6890

ski_file    = "../opt/bgp-srx-examples/bgpsec_keys/ski-list.txt";
ski_key_loc = "../opt/bgp-srx-examples/bgpsec_keys/";

preload_eckey = false;

# Choose from the following types "BGP", "CAPI", "GEN-B", and "GEN-C"
mode = "BGP";
# Maximum combined number of updates to process. Script 0 for MAX INT
max = 0;

# Allow to force the usage of the flag for extended length being set. 
only_extended_length = true;

# bin = "<binary input file>";
# out = "<binary output file>";
# Append data to the out file.
appendOut = "false";

# Allow to specify a configuration file for srx-crypto-api,If this is not specified,
# the default srx-crypto-api configuration (determined by the API) will be used.
#capi_cfg = "<configuration file>";

# Multiple sessions possible (at a later time)
session = (
  {
    asn        = 65536;
    bgp_ident  = "198.51.100.100";
    hold_timer = 180;

    # Allows to specify the next hop address. If not,
    # specified the bgp identifier is used instead!
    #next_hop_ipv4 = "198.51.100.100";
    # Required for sending IPv6 updates.
    #next_hop_ipv6 = "2001:10::C633:6464";

    peer_asn   = 65537;
    peer_ip    = "10.0.1.32";
    peer_port  = 179;

    # Run forever or until the peer shuts down.
    disconnect = 0;

    # Allow to enable/disable extended message capability.
    ext_msg_cap = true;
    # Allow to enable/disable liberal behavior when 
    # receiving extended message capability.
    ext_msg_liberal = true;
    # Overwrite draft / RFC specification and force.
    # sending extended message regardless if negotiated or not.
    #ext_msg_force = true;

    # Configure BGPSEC capabilities.
    bgpsec_v4_snd = true;
    bgpsec_v4_rcv = true;
    bgpsec_v6_snd = true;
    bgpsec_v6_rcv = true;

    # Updates for this session only
    # The first 3 prefixes are used from RFC5737 which provides them for 
    # documentation purpose
    update = (  "192.0.2.0/24, 64496"
    # Test pCount uting <ASN>p<Count>
    #          , "192.51.100.0/24, 64496p2"
    # Test > 4K bgpsec updates
    #          , "203.0.113.0/24, "
    #              "64496 64497 64496 64497 64496 64497 64496 64497 64496 64497"
    #              "64496 64497 64496 64497 64496 64497 64496 64497 64496 64497"
    #              "64496 64497 64496 64497 64496 64497 64496 64497 64496 64497"
    #              "64496 64497 64496 64497 64496 64497 64496 64497 64496 64497"
    #              "64496 64497 64496 64497 64496 64497 64496 64497 64496 64497";
             );

    # Enable/Disable adding global updates to this session.
    incl_global_updates = true;

    # Allow prefix packing for BGP4 scripted updates
    # where ever possible.
    prefixPacking = false;

    algo_id = 1;

    # Choose from the following signature modes (CAPI|BIO|BIO-K1|BIO-K2)
    # CAPI: Let SCA generate the signature
    # BIO:  Let bgpsec-io use its internal signature engine generate the 
    #       signature
    # BIO-K1: Same as BIO with the exception that the signature algorithm uses a
    #         valid pre-defined 'k' as specified in RFC 6979. section A.2.5 
    #         example using SHA-256 - sample
    #         k=A6E3C57DD01ABE90086538398355DD4C3B17AA873382B0F24D6129493D8AAD60
    #
    # BIO-K2: Same as BIO with the exception that the signature algorithm uses a
    #         valid pre-defined 'k' as specified in RFC 6979. section A.2.5 
    #         example using SHA-256 - test
    #         k=D16B6AE827F17175E040871A1C7EC3500192C4C92677336EC2537ACAEE0008E0
    #         
    signature_generation = "BIO";

    #In case the signature generation does fail, the
    #following settings are possible (DROP| FAKE| BGP4)
    null_signature_mode = "FAKE";
    fake_signature      = "1BADBEEFDEADFEED" "2BADBEEFDEADFEED"
                          "3BADBEEFDEADFEED" "4BADBEEFDEADFEED"
                          "5BADBEEFDEADFEED" "6BADBEEFDEADFEED"
                          "7BADBEEFDEADFEED" "8BADBEEFDEADFEED"
                          "ABADBEEFFACE";
    fake_ski            = "0102030405060708" "090A0B0C0D0E0F10"
                          "11121314";

    # Allow printout of send and received BGP/BGPsec traffic.
    printOnSend    = false;
    # Or more detailed as a filter
    #printOnSend = {
    #  open         = true;
    #  update       = true;
    #  keepalive    = true;
    #  notification = true;
    #  unknown      = true;
    #};

    printOnReceive    = false;
    # Or more detailed as a filter
    #printOnReceive = {
    #  open         = true;
    #  update       = true;
    #  keepalive    = true;
    #  notification = true;
    #  unknown      = true;
    #};

    #printSimple     = false;

    printPollLoop  = false;

    # For CAPI Mode.
    printOnInvalid = false;

  }
# Currently multi sessions are not supported, that is
# the reason the following section is commented out!
#  ,{
      # Here script another session
      # Minimum configuration
      # asn = 64;
      # bgp_ident = 10.0.1.64;
      # peer_asn = 32;
      # peer_ip = 10.0.1.32;
#  }

);

# global updates for all sessions
# <prefix>[,[[B4]? <asn>[p<repetition>]]*[ ]*[I|V|N]?]
update = ( 
         );
